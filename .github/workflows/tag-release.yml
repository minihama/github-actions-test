name: Create tag and release

on:
    push:
        branches: [ "main" ]
 
jobs:
    pre-version:   # 잡의 순차 실행을 위한 키 이름 
        runs-on: ubuntu-latest
        outputs:
            pre-versions: ${{ steps.version.outputs.script }}
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0  # 태그를 가져오기 위해 필요
            - name: Load Version from File
              id: version  # 이 ID를 사용하여 출력 값을 참조합니다.
              uses: actions/github-script@v7  # 최신 버전으로 업데이트
              with:
                script: |
                  const fs = require('fs');
                  const versionFile = './VERSION';  // 버전 파일 경로
                  const version = fs.readFileSync(versionFile, 'utf8').trim();
                  return version;  
            
            - name: check version
              run: echo $version


#    check-pre-version:    # 잡의 순차 실행을 위한 키 이름(출력 값 확인)
#        runs-on: ubuntu-latest
#        needs: ["pre-version"]
#        steps:
#            - env:
#                 PRE-VERSION: ${{ needs.pre-version.outputs.pre-versions }}   # 의존 잡의 출력값 참조
#              run: echo "${PRE-VERSION}"          

#    check-commit:   # 잡의 순차 실행을 위한 키 이름 
#        runs-on: ubuntu-latest
#        needs: ["pre-version"]
#        if: ${{ needs.pre-version.outputs.pre-versions != '' }}
#        outputs:
#            result: ${{ steps.check.outputs.result }}   # 출력 ID: 잡 수준(check-commit.result)의 출력값
#            version: ${{ steps.get-version.outputs.version }}
#        steps:
#            - uses: actions/checkout@v3
#            - name: Check commit message
#              id: check      # 스텝 ID
#              # 커밋 메시지 내용이 head_commit.message에 기입 된다.
#              # 스텝 수준(check.result)의 출력값
#              run: echo "result=$(echo '${{ github.event.head_commit.message }}' | grep -oP '^Update version to v(\d|\.)+$')" >> $GITHUB_OUTPUT
#              shell: bash
#            - name: Get version
#              id: get-version
#              run: echo "version=$(echo '${{ github.event.head_commit.message }}' | grep -oP 'v(\d|\.)+')" >> $GITHUB_OUTPUT
#              shell: bash
#    check-commit-message:    # 잡의 순차 실행을 위한 키 이름(출력 값 확인)
#        runs-on: ubuntu-latest
#        needs: ["check-commit"]
#        steps:
#            - env:
#                 RESULT: ${{ needs.check-commit.outputs.result }}   # 의존 잡의 출력값 참조
#              run: echo "${RESULT}"          
#            - env:
#                 VERSION: ${{ needs.check-commit.outputs.version }}   # 의존 잡의 출력값 참조
#              run: echo "${VERSION}"   